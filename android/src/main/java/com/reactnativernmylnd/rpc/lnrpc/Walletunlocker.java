// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: walletunlocker.proto

package lnrpc;

public final class Walletunlocker {
  private Walletunlocker() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GenSeedRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.GenSeedRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes aezeed_passphrase = 1;</code>
     * @return The aezeedPassphrase.
     */
    com.google.protobuf.ByteString getAezeedPassphrase();

    /**
     * <pre>
     *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *specified, then a fresh set of randomness will be used to create the seed.
     *When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes seed_entropy = 2;</code>
     * @return The seedEntropy.
     */
    com.google.protobuf.ByteString getSeedEntropy();
  }
  /**
   * Protobuf type {@code lnrpc.GenSeedRequest}
   */
  public static final class GenSeedRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.GenSeedRequest)
      GenSeedRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenSeedRequest.newBuilder() to construct.
    private GenSeedRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenSeedRequest() {
      aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;
      seedEntropy_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenSeedRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GenSeedRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              aezeedPassphrase_ = input.readBytes();
              break;
            }
            case 18: {

              seedEntropy_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.GenSeedRequest.class, lnrpc.Walletunlocker.GenSeedRequest.Builder.class);
    }

    public static final int AEZEED_PASSPHRASE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString aezeedPassphrase_;
    /**
     * <pre>
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes aezeed_passphrase = 1;</code>
     * @return The aezeedPassphrase.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAezeedPassphrase() {
      return aezeedPassphrase_;
    }

    public static final int SEED_ENTROPY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString seedEntropy_;
    /**
     * <pre>
     *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *specified, then a fresh set of randomness will be used to create the seed.
     *When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes seed_entropy = 2;</code>
     * @return The seedEntropy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSeedEntropy() {
      return seedEntropy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!aezeedPassphrase_.isEmpty()) {
        output.writeBytes(1, aezeedPassphrase_);
      }
      if (!seedEntropy_.isEmpty()) {
        output.writeBytes(2, seedEntropy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!aezeedPassphrase_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, aezeedPassphrase_);
      }
      if (!seedEntropy_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, seedEntropy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.GenSeedRequest)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.GenSeedRequest other = (lnrpc.Walletunlocker.GenSeedRequest) obj;

      if (!getAezeedPassphrase()
          .equals(other.getAezeedPassphrase())) return false;
      if (!getSeedEntropy()
          .equals(other.getSeedEntropy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AEZEED_PASSPHRASE_FIELD_NUMBER;
      hash = (53 * hash) + getAezeedPassphrase().hashCode();
      hash = (37 * hash) + SEED_ENTROPY_FIELD_NUMBER;
      hash = (53 * hash) + getSeedEntropy().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.GenSeedRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.GenSeedRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.GenSeedRequest)
        lnrpc.Walletunlocker.GenSeedRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.GenSeedRequest.class, lnrpc.Walletunlocker.GenSeedRequest.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.GenSeedRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;

        seedEntropy_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedRequest_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedRequest getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.GenSeedRequest.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedRequest build() {
        lnrpc.Walletunlocker.GenSeedRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedRequest buildPartial() {
        lnrpc.Walletunlocker.GenSeedRequest result = new lnrpc.Walletunlocker.GenSeedRequest(this);
        result.aezeedPassphrase_ = aezeedPassphrase_;
        result.seedEntropy_ = seedEntropy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.GenSeedRequest) {
          return mergeFrom((lnrpc.Walletunlocker.GenSeedRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.GenSeedRequest other) {
        if (other == lnrpc.Walletunlocker.GenSeedRequest.getDefaultInstance()) return this;
        if (other.getAezeedPassphrase() != com.google.protobuf.ByteString.EMPTY) {
          setAezeedPassphrase(other.getAezeedPassphrase());
        }
        if (other.getSeedEntropy() != com.google.protobuf.ByteString.EMPTY) {
          setSeedEntropy(other.getSeedEntropy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.GenSeedRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.GenSeedRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 1;</code>
       * @return The aezeedPassphrase.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAezeedPassphrase() {
        return aezeedPassphrase_;
      }
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 1;</code>
       * @param value The aezeedPassphrase to set.
       * @return This builder for chaining.
       */
      public Builder setAezeedPassphrase(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        aezeedPassphrase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAezeedPassphrase() {
        
        aezeedPassphrase_ = getDefaultInstance().getAezeedPassphrase();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString seedEntropy_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
       *specified, then a fresh set of randomness will be used to create the seed.
       *When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes seed_entropy = 2;</code>
       * @return The seedEntropy.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSeedEntropy() {
        return seedEntropy_;
      }
      /**
       * <pre>
       *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
       *specified, then a fresh set of randomness will be used to create the seed.
       *When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes seed_entropy = 2;</code>
       * @param value The seedEntropy to set.
       * @return This builder for chaining.
       */
      public Builder setSeedEntropy(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        seedEntropy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
       *specified, then a fresh set of randomness will be used to create the seed.
       *When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes seed_entropy = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeedEntropy() {
        
        seedEntropy_ = getDefaultInstance().getSeedEntropy();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.GenSeedRequest)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.GenSeedRequest)
    private static final lnrpc.Walletunlocker.GenSeedRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.GenSeedRequest();
    }

    public static lnrpc.Walletunlocker.GenSeedRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenSeedRequest>
        PARSER = new com.google.protobuf.AbstractParser<GenSeedRequest>() {
      @java.lang.Override
      public GenSeedRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GenSeedRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GenSeedRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenSeedRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.GenSeedRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GenSeedResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.GenSeedResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @return A list containing the cipherSeedMnemonic.
     */
    java.util.List<java.lang.String>
        getCipherSeedMnemonicList();
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @return The count of cipherSeedMnemonic.
     */
    int getCipherSeedMnemonicCount();
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @param index The index of the element to return.
     * @return The cipherSeedMnemonic at the given index.
     */
    java.lang.String getCipherSeedMnemonic(int index);
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSeedMnemonic at the given index.
     */
    com.google.protobuf.ByteString
        getCipherSeedMnemonicBytes(int index);

    /**
     * <pre>
     *enciphered_seed are the raw aezeed cipher seed bytes. This is the raw
     *cipher text before run through our mnemonic encoding scheme.
     * </pre>
     *
     * <code>bytes enciphered_seed = 2;</code>
     * @return The encipheredSeed.
     */
    com.google.protobuf.ByteString getEncipheredSeed();
  }
  /**
   * Protobuf type {@code lnrpc.GenSeedResponse}
   */
  public static final class GenSeedResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.GenSeedResponse)
      GenSeedResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenSeedResponse.newBuilder() to construct.
    private GenSeedResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenSeedResponse() {
      cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      encipheredSeed_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenSeedResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GenSeedResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cipherSeedMnemonic_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              cipherSeedMnemonic_.add(s);
              break;
            }
            case 18: {

              encipheredSeed_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = cipherSeedMnemonic_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.GenSeedResponse.class, lnrpc.Walletunlocker.GenSeedResponse.Builder.class);
    }

    public static final int CIPHER_SEED_MNEMONIC_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList cipherSeedMnemonic_;
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @return A list containing the cipherSeedMnemonic.
     */
    public com.google.protobuf.ProtocolStringList
        getCipherSeedMnemonicList() {
      return cipherSeedMnemonic_;
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @return The count of cipherSeedMnemonic.
     */
    public int getCipherSeedMnemonicCount() {
      return cipherSeedMnemonic_.size();
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @param index The index of the element to return.
     * @return The cipherSeedMnemonic at the given index.
     */
    public java.lang.String getCipherSeedMnemonic(int index) {
      return cipherSeedMnemonic_.get(index);
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This field is optional, as if not
     *provided, then the daemon will generate a new cipher seed for the user.
     *Otherwise, then the daemon will attempt to recover the wallet state linked
     *to this cipher seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSeedMnemonic at the given index.
     */
    public com.google.protobuf.ByteString
        getCipherSeedMnemonicBytes(int index) {
      return cipherSeedMnemonic_.getByteString(index);
    }

    public static final int ENCIPHERED_SEED_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString encipheredSeed_;
    /**
     * <pre>
     *enciphered_seed are the raw aezeed cipher seed bytes. This is the raw
     *cipher text before run through our mnemonic encoding scheme.
     * </pre>
     *
     * <code>bytes enciphered_seed = 2;</code>
     * @return The encipheredSeed.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncipheredSeed() {
      return encipheredSeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cipherSeedMnemonic_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cipherSeedMnemonic_.getRaw(i));
      }
      if (!encipheredSeed_.isEmpty()) {
        output.writeBytes(2, encipheredSeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cipherSeedMnemonic_.size(); i++) {
          dataSize += computeStringSizeNoTag(cipherSeedMnemonic_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCipherSeedMnemonicList().size();
      }
      if (!encipheredSeed_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, encipheredSeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.GenSeedResponse)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.GenSeedResponse other = (lnrpc.Walletunlocker.GenSeedResponse) obj;

      if (!getCipherSeedMnemonicList()
          .equals(other.getCipherSeedMnemonicList())) return false;
      if (!getEncipheredSeed()
          .equals(other.getEncipheredSeed())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCipherSeedMnemonicCount() > 0) {
        hash = (37 * hash) + CIPHER_SEED_MNEMONIC_FIELD_NUMBER;
        hash = (53 * hash) + getCipherSeedMnemonicList().hashCode();
      }
      hash = (37 * hash) + ENCIPHERED_SEED_FIELD_NUMBER;
      hash = (53 * hash) + getEncipheredSeed().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.GenSeedResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.GenSeedResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.GenSeedResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.GenSeedResponse)
        lnrpc.Walletunlocker.GenSeedResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.GenSeedResponse.class, lnrpc.Walletunlocker.GenSeedResponse.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.GenSeedResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        encipheredSeed_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_GenSeedResponse_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedResponse getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.GenSeedResponse.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedResponse build() {
        lnrpc.Walletunlocker.GenSeedResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.GenSeedResponse buildPartial() {
        lnrpc.Walletunlocker.GenSeedResponse result = new lnrpc.Walletunlocker.GenSeedResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = cipherSeedMnemonic_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cipherSeedMnemonic_ = cipherSeedMnemonic_;
        result.encipheredSeed_ = encipheredSeed_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.GenSeedResponse) {
          return mergeFrom((lnrpc.Walletunlocker.GenSeedResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.GenSeedResponse other) {
        if (other == lnrpc.Walletunlocker.GenSeedResponse.getDefaultInstance()) return this;
        if (!other.cipherSeedMnemonic_.isEmpty()) {
          if (cipherSeedMnemonic_.isEmpty()) {
            cipherSeedMnemonic_ = other.cipherSeedMnemonic_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCipherSeedMnemonicIsMutable();
            cipherSeedMnemonic_.addAll(other.cipherSeedMnemonic_);
          }
          onChanged();
        }
        if (other.getEncipheredSeed() != com.google.protobuf.ByteString.EMPTY) {
          setEncipheredSeed(other.getEncipheredSeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.GenSeedResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.GenSeedResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCipherSeedMnemonicIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = new com.google.protobuf.LazyStringArrayList(cipherSeedMnemonic_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @return A list containing the cipherSeedMnemonic.
       */
      public com.google.protobuf.ProtocolStringList
          getCipherSeedMnemonicList() {
        return cipherSeedMnemonic_.getUnmodifiableView();
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @return The count of cipherSeedMnemonic.
       */
      public int getCipherSeedMnemonicCount() {
        return cipherSeedMnemonic_.size();
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param index The index of the element to return.
       * @return The cipherSeedMnemonic at the given index.
       */
      public java.lang.String getCipherSeedMnemonic(int index) {
        return cipherSeedMnemonic_.get(index);
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the cipherSeedMnemonic at the given index.
       */
      public com.google.protobuf.ByteString
          getCipherSeedMnemonicBytes(int index) {
        return cipherSeedMnemonic_.getByteString(index);
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param index The index to set the value at.
       * @param value The cipherSeedMnemonic to set.
       * @return This builder for chaining.
       */
      public Builder setCipherSeedMnemonic(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param value The cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSeedMnemonic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param values The cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addAllCipherSeedMnemonic(
          java.lang.Iterable<java.lang.String> values) {
        ensureCipherSeedMnemonicIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cipherSeedMnemonic_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCipherSeedMnemonic() {
        cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This field is optional, as if not
       *provided, then the daemon will generate a new cipher seed for the user.
       *Otherwise, then the daemon will attempt to recover the wallet state linked
       *to this cipher seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 1;</code>
       * @param value The bytes of the cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSeedMnemonicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString encipheredSeed_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *enciphered_seed are the raw aezeed cipher seed bytes. This is the raw
       *cipher text before run through our mnemonic encoding scheme.
       * </pre>
       *
       * <code>bytes enciphered_seed = 2;</code>
       * @return The encipheredSeed.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncipheredSeed() {
        return encipheredSeed_;
      }
      /**
       * <pre>
       *enciphered_seed are the raw aezeed cipher seed bytes. This is the raw
       *cipher text before run through our mnemonic encoding scheme.
       * </pre>
       *
       * <code>bytes enciphered_seed = 2;</code>
       * @param value The encipheredSeed to set.
       * @return This builder for chaining.
       */
      public Builder setEncipheredSeed(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encipheredSeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *enciphered_seed are the raw aezeed cipher seed bytes. This is the raw
       *cipher text before run through our mnemonic encoding scheme.
       * </pre>
       *
       * <code>bytes enciphered_seed = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncipheredSeed() {
        
        encipheredSeed_ = getDefaultInstance().getEncipheredSeed();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.GenSeedResponse)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.GenSeedResponse)
    private static final lnrpc.Walletunlocker.GenSeedResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.GenSeedResponse();
    }

    public static lnrpc.Walletunlocker.GenSeedResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenSeedResponse>
        PARSER = new com.google.protobuf.AbstractParser<GenSeedResponse>() {
      @java.lang.Override
      public GenSeedResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GenSeedResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GenSeedResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenSeedResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.GenSeedResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InitWalletRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.InitWalletRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *wallet_password is the passphrase that should be used to encrypt the
     *wallet. This MUST be at least 8 chars in length. After creation, this
     *password is required to unlock the daemon. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes wallet_password = 1;</code>
     * @return The walletPassword.
     */
    com.google.protobuf.ByteString getWalletPassword();

    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @return A list containing the cipherSeedMnemonic.
     */
    java.util.List<java.lang.String>
        getCipherSeedMnemonicList();
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @return The count of cipherSeedMnemonic.
     */
    int getCipherSeedMnemonicCount();
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @param index The index of the element to return.
     * @return The cipherSeedMnemonic at the given index.
     */
    java.lang.String getCipherSeedMnemonic(int index);
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSeedMnemonic at the given index.
     */
    com.google.protobuf.ByteString
        getCipherSeedMnemonicBytes(int index);

    /**
     * <pre>
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes aezeed_passphrase = 3;</code>
     * @return The aezeedPassphrase.
     */
    com.google.protobuf.ByteString getAezeedPassphrase();

    /**
     * <pre>
     *recovery_window is an optional argument specifying the address lookahead
     *when restoring a wallet seed. The recovery window applies to each
     *individual branch of the BIP44 derivation paths. Supplying a recovery
     *window of zero indicates that no addresses should be recovered, such after
     *the first initialization of the wallet.
     * </pre>
     *
     * <code>int32 recovery_window = 4;</code>
     * @return The recoveryWindow.
     */
    int getRecoveryWindow();

    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     * @return Whether the channelBackups field is set.
     */
    boolean hasChannelBackups();
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     * @return The channelBackups.
     */
    lnrpc.Rpc.ChanBackupSnapshot getChannelBackups();
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     */
    lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder();
  }
  /**
   * Protobuf type {@code lnrpc.InitWalletRequest}
   */
  public static final class InitWalletRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.InitWalletRequest)
      InitWalletRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InitWalletRequest.newBuilder() to construct.
    private InitWalletRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InitWalletRequest() {
      walletPassword_ = com.google.protobuf.ByteString.EMPTY;
      cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InitWalletRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InitWalletRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              walletPassword_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cipherSeedMnemonic_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              cipherSeedMnemonic_.add(s);
              break;
            }
            case 26: {

              aezeedPassphrase_ = input.readBytes();
              break;
            }
            case 32: {

              recoveryWindow_ = input.readInt32();
              break;
            }
            case 42: {
              lnrpc.Rpc.ChanBackupSnapshot.Builder subBuilder = null;
              if (channelBackups_ != null) {
                subBuilder = channelBackups_.toBuilder();
              }
              channelBackups_ = input.readMessage(lnrpc.Rpc.ChanBackupSnapshot.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channelBackups_);
                channelBackups_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = cipherSeedMnemonic_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.InitWalletRequest.class, lnrpc.Walletunlocker.InitWalletRequest.Builder.class);
    }

    public static final int WALLET_PASSWORD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString walletPassword_;
    /**
     * <pre>
     *wallet_password is the passphrase that should be used to encrypt the
     *wallet. This MUST be at least 8 chars in length. After creation, this
     *password is required to unlock the daemon. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes wallet_password = 1;</code>
     * @return The walletPassword.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getWalletPassword() {
      return walletPassword_;
    }

    public static final int CIPHER_SEED_MNEMONIC_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList cipherSeedMnemonic_;
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @return A list containing the cipherSeedMnemonic.
     */
    public com.google.protobuf.ProtocolStringList
        getCipherSeedMnemonicList() {
      return cipherSeedMnemonic_;
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @return The count of cipherSeedMnemonic.
     */
    public int getCipherSeedMnemonicCount() {
      return cipherSeedMnemonic_.size();
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @param index The index of the element to return.
     * @return The cipherSeedMnemonic at the given index.
     */
    public java.lang.String getCipherSeedMnemonic(int index) {
      return cipherSeedMnemonic_.get(index);
    }
    /**
     * <pre>
     *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
     *cipher seed obtained by the user. This may have been generated by the
     *GenSeed method, or be an existing seed.
     * </pre>
     *
     * <code>repeated string cipher_seed_mnemonic = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cipherSeedMnemonic at the given index.
     */
    public com.google.protobuf.ByteString
        getCipherSeedMnemonicBytes(int index) {
      return cipherSeedMnemonic_.getByteString(index);
    }

    public static final int AEZEED_PASSPHRASE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString aezeedPassphrase_;
    /**
     * <pre>
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed. When using REST, this field
     *must be encoded as base64.
     * </pre>
     *
     * <code>bytes aezeed_passphrase = 3;</code>
     * @return The aezeedPassphrase.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAezeedPassphrase() {
      return aezeedPassphrase_;
    }

    public static final int RECOVERY_WINDOW_FIELD_NUMBER = 4;
    private int recoveryWindow_;
    /**
     * <pre>
     *recovery_window is an optional argument specifying the address lookahead
     *when restoring a wallet seed. The recovery window applies to each
     *individual branch of the BIP44 derivation paths. Supplying a recovery
     *window of zero indicates that no addresses should be recovered, such after
     *the first initialization of the wallet.
     * </pre>
     *
     * <code>int32 recovery_window = 4;</code>
     * @return The recoveryWindow.
     */
    @java.lang.Override
    public int getRecoveryWindow() {
      return recoveryWindow_;
    }

    public static final int CHANNEL_BACKUPS_FIELD_NUMBER = 5;
    private lnrpc.Rpc.ChanBackupSnapshot channelBackups_;
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     * @return Whether the channelBackups field is set.
     */
    @java.lang.Override
    public boolean hasChannelBackups() {
      return channelBackups_ != null;
    }
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     * @return The channelBackups.
     */
    @java.lang.Override
    public lnrpc.Rpc.ChanBackupSnapshot getChannelBackups() {
      return channelBackups_ == null ? lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
    }
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
     */
    @java.lang.Override
    public lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder() {
      return getChannelBackups();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!walletPassword_.isEmpty()) {
        output.writeBytes(1, walletPassword_);
      }
      for (int i = 0; i < cipherSeedMnemonic_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cipherSeedMnemonic_.getRaw(i));
      }
      if (!aezeedPassphrase_.isEmpty()) {
        output.writeBytes(3, aezeedPassphrase_);
      }
      if (recoveryWindow_ != 0) {
        output.writeInt32(4, recoveryWindow_);
      }
      if (channelBackups_ != null) {
        output.writeMessage(5, getChannelBackups());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!walletPassword_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, walletPassword_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cipherSeedMnemonic_.size(); i++) {
          dataSize += computeStringSizeNoTag(cipherSeedMnemonic_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCipherSeedMnemonicList().size();
      }
      if (!aezeedPassphrase_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, aezeedPassphrase_);
      }
      if (recoveryWindow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, recoveryWindow_);
      }
      if (channelBackups_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getChannelBackups());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.InitWalletRequest)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.InitWalletRequest other = (lnrpc.Walletunlocker.InitWalletRequest) obj;

      if (!getWalletPassword()
          .equals(other.getWalletPassword())) return false;
      if (!getCipherSeedMnemonicList()
          .equals(other.getCipherSeedMnemonicList())) return false;
      if (!getAezeedPassphrase()
          .equals(other.getAezeedPassphrase())) return false;
      if (getRecoveryWindow()
          != other.getRecoveryWindow()) return false;
      if (hasChannelBackups() != other.hasChannelBackups()) return false;
      if (hasChannelBackups()) {
        if (!getChannelBackups()
            .equals(other.getChannelBackups())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getWalletPassword().hashCode();
      if (getCipherSeedMnemonicCount() > 0) {
        hash = (37 * hash) + CIPHER_SEED_MNEMONIC_FIELD_NUMBER;
        hash = (53 * hash) + getCipherSeedMnemonicList().hashCode();
      }
      hash = (37 * hash) + AEZEED_PASSPHRASE_FIELD_NUMBER;
      hash = (53 * hash) + getAezeedPassphrase().hashCode();
      hash = (37 * hash) + RECOVERY_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getRecoveryWindow();
      if (hasChannelBackups()) {
        hash = (37 * hash) + CHANNEL_BACKUPS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelBackups().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.InitWalletRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.InitWalletRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.InitWalletRequest)
        lnrpc.Walletunlocker.InitWalletRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.InitWalletRequest.class, lnrpc.Walletunlocker.InitWalletRequest.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.InitWalletRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletPassword_ = com.google.protobuf.ByteString.EMPTY;

        cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;

        recoveryWindow_ = 0;

        if (channelBackupsBuilder_ == null) {
          channelBackups_ = null;
        } else {
          channelBackups_ = null;
          channelBackupsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletRequest_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletRequest getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.InitWalletRequest.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletRequest build() {
        lnrpc.Walletunlocker.InitWalletRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletRequest buildPartial() {
        lnrpc.Walletunlocker.InitWalletRequest result = new lnrpc.Walletunlocker.InitWalletRequest(this);
        int from_bitField0_ = bitField0_;
        result.walletPassword_ = walletPassword_;
        if (((bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = cipherSeedMnemonic_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cipherSeedMnemonic_ = cipherSeedMnemonic_;
        result.aezeedPassphrase_ = aezeedPassphrase_;
        result.recoveryWindow_ = recoveryWindow_;
        if (channelBackupsBuilder_ == null) {
          result.channelBackups_ = channelBackups_;
        } else {
          result.channelBackups_ = channelBackupsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.InitWalletRequest) {
          return mergeFrom((lnrpc.Walletunlocker.InitWalletRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.InitWalletRequest other) {
        if (other == lnrpc.Walletunlocker.InitWalletRequest.getDefaultInstance()) return this;
        if (other.getWalletPassword() != com.google.protobuf.ByteString.EMPTY) {
          setWalletPassword(other.getWalletPassword());
        }
        if (!other.cipherSeedMnemonic_.isEmpty()) {
          if (cipherSeedMnemonic_.isEmpty()) {
            cipherSeedMnemonic_ = other.cipherSeedMnemonic_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCipherSeedMnemonicIsMutable();
            cipherSeedMnemonic_.addAll(other.cipherSeedMnemonic_);
          }
          onChanged();
        }
        if (other.getAezeedPassphrase() != com.google.protobuf.ByteString.EMPTY) {
          setAezeedPassphrase(other.getAezeedPassphrase());
        }
        if (other.getRecoveryWindow() != 0) {
          setRecoveryWindow(other.getRecoveryWindow());
        }
        if (other.hasChannelBackups()) {
          mergeChannelBackups(other.getChannelBackups());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.InitWalletRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.InitWalletRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString walletPassword_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *wallet_password is the passphrase that should be used to encrypt the
       *wallet. This MUST be at least 8 chars in length. After creation, this
       *password is required to unlock the daemon. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @return The walletPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getWalletPassword() {
        return walletPassword_;
      }
      /**
       * <pre>
       *wallet_password is the passphrase that should be used to encrypt the
       *wallet. This MUST be at least 8 chars in length. After creation, this
       *password is required to unlock the daemon. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @param value The walletPassword to set.
       * @return This builder for chaining.
       */
      public Builder setWalletPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *wallet_password is the passphrase that should be used to encrypt the
       *wallet. This MUST be at least 8 chars in length. After creation, this
       *password is required to unlock the daemon. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearWalletPassword() {
        
        walletPassword_ = getDefaultInstance().getWalletPassword();
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCipherSeedMnemonicIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cipherSeedMnemonic_ = new com.google.protobuf.LazyStringArrayList(cipherSeedMnemonic_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @return A list containing the cipherSeedMnemonic.
       */
      public com.google.protobuf.ProtocolStringList
          getCipherSeedMnemonicList() {
        return cipherSeedMnemonic_.getUnmodifiableView();
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @return The count of cipherSeedMnemonic.
       */
      public int getCipherSeedMnemonicCount() {
        return cipherSeedMnemonic_.size();
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param index The index of the element to return.
       * @return The cipherSeedMnemonic at the given index.
       */
      public java.lang.String getCipherSeedMnemonic(int index) {
        return cipherSeedMnemonic_.get(index);
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the cipherSeedMnemonic at the given index.
       */
      public com.google.protobuf.ByteString
          getCipherSeedMnemonicBytes(int index) {
        return cipherSeedMnemonic_.getByteString(index);
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param index The index to set the value at.
       * @param value The cipherSeedMnemonic to set.
       * @return This builder for chaining.
       */
      public Builder setCipherSeedMnemonic(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param value The cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSeedMnemonic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param values The cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addAllCipherSeedMnemonic(
          java.lang.Iterable<java.lang.String> values) {
        ensureCipherSeedMnemonicIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cipherSeedMnemonic_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCipherSeedMnemonic() {
        cipherSeedMnemonic_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *cipher_seed_mnemonic is a 24-word mnemonic that encodes a prior aezeed
       *cipher seed obtained by the user. This may have been generated by the
       *GenSeed method, or be an existing seed.
       * </pre>
       *
       * <code>repeated string cipher_seed_mnemonic = 2;</code>
       * @param value The bytes of the cipherSeedMnemonic to add.
       * @return This builder for chaining.
       */
      public Builder addCipherSeedMnemonicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCipherSeedMnemonicIsMutable();
        cipherSeedMnemonic_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString aezeedPassphrase_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 3;</code>
       * @return The aezeedPassphrase.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAezeedPassphrase() {
        return aezeedPassphrase_;
      }
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 3;</code>
       * @param value The aezeedPassphrase to set.
       * @return This builder for chaining.
       */
      public Builder setAezeedPassphrase(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        aezeedPassphrase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *aezeed_passphrase is an optional user provided passphrase that will be used
       *to encrypt the generated aezeed cipher seed. When using REST, this field
       *must be encoded as base64.
       * </pre>
       *
       * <code>bytes aezeed_passphrase = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAezeedPassphrase() {
        
        aezeedPassphrase_ = getDefaultInstance().getAezeedPassphrase();
        onChanged();
        return this;
      }

      private int recoveryWindow_ ;
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 4;</code>
       * @return The recoveryWindow.
       */
      @java.lang.Override
      public int getRecoveryWindow() {
        return recoveryWindow_;
      }
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 4;</code>
       * @param value The recoveryWindow to set.
       * @return This builder for chaining.
       */
      public Builder setRecoveryWindow(int value) {
        
        recoveryWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecoveryWindow() {
        
        recoveryWindow_ = 0;
        onChanged();
        return this;
      }

      private lnrpc.Rpc.ChanBackupSnapshot channelBackups_;
      private com.google.protobuf.SingleFieldBuilderV3<
          lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder> channelBackupsBuilder_;
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       * @return Whether the channelBackups field is set.
       */
      public boolean hasChannelBackups() {
        return channelBackupsBuilder_ != null || channelBackups_ != null;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       * @return The channelBackups.
       */
      public lnrpc.Rpc.ChanBackupSnapshot getChannelBackups() {
        if (channelBackupsBuilder_ == null) {
          return channelBackups_ == null ? lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
        } else {
          return channelBackupsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public Builder setChannelBackups(lnrpc.Rpc.ChanBackupSnapshot value) {
        if (channelBackupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channelBackups_ = value;
          onChanged();
        } else {
          channelBackupsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public Builder setChannelBackups(
          lnrpc.Rpc.ChanBackupSnapshot.Builder builderForValue) {
        if (channelBackupsBuilder_ == null) {
          channelBackups_ = builderForValue.build();
          onChanged();
        } else {
          channelBackupsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public Builder mergeChannelBackups(lnrpc.Rpc.ChanBackupSnapshot value) {
        if (channelBackupsBuilder_ == null) {
          if (channelBackups_ != null) {
            channelBackups_ =
              lnrpc.Rpc.ChanBackupSnapshot.newBuilder(channelBackups_).mergeFrom(value).buildPartial();
          } else {
            channelBackups_ = value;
          }
          onChanged();
        } else {
          channelBackupsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public Builder clearChannelBackups() {
        if (channelBackupsBuilder_ == null) {
          channelBackups_ = null;
          onChanged();
        } else {
          channelBackups_ = null;
          channelBackupsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public lnrpc.Rpc.ChanBackupSnapshot.Builder getChannelBackupsBuilder() {
        
        onChanged();
        return getChannelBackupsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      public lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder() {
        if (channelBackupsBuilder_ != null) {
          return channelBackupsBuilder_.getMessageOrBuilder();
        } else {
          return channelBackups_ == null ?
              lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
        }
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder> 
          getChannelBackupsFieldBuilder() {
        if (channelBackupsBuilder_ == null) {
          channelBackupsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder>(
                  getChannelBackups(),
                  getParentForChildren(),
                  isClean());
          channelBackups_ = null;
        }
        return channelBackupsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.InitWalletRequest)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.InitWalletRequest)
    private static final lnrpc.Walletunlocker.InitWalletRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.InitWalletRequest();
    }

    public static lnrpc.Walletunlocker.InitWalletRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InitWalletRequest>
        PARSER = new com.google.protobuf.AbstractParser<InitWalletRequest>() {
      @java.lang.Override
      public InitWalletRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitWalletRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InitWalletRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InitWalletRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.InitWalletRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InitWalletResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.InitWalletResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code lnrpc.InitWalletResponse}
   */
  public static final class InitWalletResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.InitWalletResponse)
      InitWalletResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InitWalletResponse.newBuilder() to construct.
    private InitWalletResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InitWalletResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InitWalletResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InitWalletResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.InitWalletResponse.class, lnrpc.Walletunlocker.InitWalletResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.InitWalletResponse)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.InitWalletResponse other = (lnrpc.Walletunlocker.InitWalletResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.InitWalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.InitWalletResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.InitWalletResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.InitWalletResponse)
        lnrpc.Walletunlocker.InitWalletResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.InitWalletResponse.class, lnrpc.Walletunlocker.InitWalletResponse.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.InitWalletResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_InitWalletResponse_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletResponse getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.InitWalletResponse.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletResponse build() {
        lnrpc.Walletunlocker.InitWalletResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.InitWalletResponse buildPartial() {
        lnrpc.Walletunlocker.InitWalletResponse result = new lnrpc.Walletunlocker.InitWalletResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.InitWalletResponse) {
          return mergeFrom((lnrpc.Walletunlocker.InitWalletResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.InitWalletResponse other) {
        if (other == lnrpc.Walletunlocker.InitWalletResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.InitWalletResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.InitWalletResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.InitWalletResponse)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.InitWalletResponse)
    private static final lnrpc.Walletunlocker.InitWalletResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.InitWalletResponse();
    }

    public static lnrpc.Walletunlocker.InitWalletResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InitWalletResponse>
        PARSER = new com.google.protobuf.AbstractParser<InitWalletResponse>() {
      @java.lang.Override
      public InitWalletResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitWalletResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InitWalletResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InitWalletResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.InitWalletResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnlockWalletRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.UnlockWalletRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *wallet_password should be the current valid passphrase for the daemon. This
     *will be required to decrypt on-disk material that the daemon requires to
     *function properly. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes wallet_password = 1;</code>
     * @return The walletPassword.
     */
    com.google.protobuf.ByteString getWalletPassword();

    /**
     * <pre>
     *recovery_window is an optional argument specifying the address lookahead
     *when restoring a wallet seed. The recovery window applies to each
     *individual branch of the BIP44 derivation paths. Supplying a recovery
     *window of zero indicates that no addresses should be recovered, such after
     *the first initialization of the wallet.
     * </pre>
     *
     * <code>int32 recovery_window = 2;</code>
     * @return The recoveryWindow.
     */
    int getRecoveryWindow();

    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     * @return Whether the channelBackups field is set.
     */
    boolean hasChannelBackups();
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     * @return The channelBackups.
     */
    lnrpc.Rpc.ChanBackupSnapshot getChannelBackups();
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     */
    lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder();
  }
  /**
   * Protobuf type {@code lnrpc.UnlockWalletRequest}
   */
  public static final class UnlockWalletRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.UnlockWalletRequest)
      UnlockWalletRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnlockWalletRequest.newBuilder() to construct.
    private UnlockWalletRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnlockWalletRequest() {
      walletPassword_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnlockWalletRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnlockWalletRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              walletPassword_ = input.readBytes();
              break;
            }
            case 16: {

              recoveryWindow_ = input.readInt32();
              break;
            }
            case 26: {
              lnrpc.Rpc.ChanBackupSnapshot.Builder subBuilder = null;
              if (channelBackups_ != null) {
                subBuilder = channelBackups_.toBuilder();
              }
              channelBackups_ = input.readMessage(lnrpc.Rpc.ChanBackupSnapshot.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channelBackups_);
                channelBackups_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.UnlockWalletRequest.class, lnrpc.Walletunlocker.UnlockWalletRequest.Builder.class);
    }

    public static final int WALLET_PASSWORD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString walletPassword_;
    /**
     * <pre>
     *wallet_password should be the current valid passphrase for the daemon. This
     *will be required to decrypt on-disk material that the daemon requires to
     *function properly. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes wallet_password = 1;</code>
     * @return The walletPassword.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getWalletPassword() {
      return walletPassword_;
    }

    public static final int RECOVERY_WINDOW_FIELD_NUMBER = 2;
    private int recoveryWindow_;
    /**
     * <pre>
     *recovery_window is an optional argument specifying the address lookahead
     *when restoring a wallet seed. The recovery window applies to each
     *individual branch of the BIP44 derivation paths. Supplying a recovery
     *window of zero indicates that no addresses should be recovered, such after
     *the first initialization of the wallet.
     * </pre>
     *
     * <code>int32 recovery_window = 2;</code>
     * @return The recoveryWindow.
     */
    @java.lang.Override
    public int getRecoveryWindow() {
      return recoveryWindow_;
    }

    public static final int CHANNEL_BACKUPS_FIELD_NUMBER = 3;
    private lnrpc.Rpc.ChanBackupSnapshot channelBackups_;
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     * @return Whether the channelBackups field is set.
     */
    @java.lang.Override
    public boolean hasChannelBackups() {
      return channelBackups_ != null;
    }
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     * @return The channelBackups.
     */
    @java.lang.Override
    public lnrpc.Rpc.ChanBackupSnapshot getChannelBackups() {
      return channelBackups_ == null ? lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
    }
    /**
     * <pre>
     *channel_backups is an optional argument that allows clients to recover the
     *settled funds within a set of channels. This should be populated if the
     *user was unable to close out all channels and sweep funds before partial or
     *total data loss occurred. If specified, then after on-chain recovery of
     *funds, lnd begin to carry out the data loss recovery protocol in order to
     *recover the funds in each channel from a remote force closed transaction.
     * </pre>
     *
     * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
     */
    @java.lang.Override
    public lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder() {
      return getChannelBackups();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!walletPassword_.isEmpty()) {
        output.writeBytes(1, walletPassword_);
      }
      if (recoveryWindow_ != 0) {
        output.writeInt32(2, recoveryWindow_);
      }
      if (channelBackups_ != null) {
        output.writeMessage(3, getChannelBackups());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!walletPassword_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, walletPassword_);
      }
      if (recoveryWindow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, recoveryWindow_);
      }
      if (channelBackups_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChannelBackups());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.UnlockWalletRequest)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.UnlockWalletRequest other = (lnrpc.Walletunlocker.UnlockWalletRequest) obj;

      if (!getWalletPassword()
          .equals(other.getWalletPassword())) return false;
      if (getRecoveryWindow()
          != other.getRecoveryWindow()) return false;
      if (hasChannelBackups() != other.hasChannelBackups()) return false;
      if (hasChannelBackups()) {
        if (!getChannelBackups()
            .equals(other.getChannelBackups())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getWalletPassword().hashCode();
      hash = (37 * hash) + RECOVERY_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getRecoveryWindow();
      if (hasChannelBackups()) {
        hash = (37 * hash) + CHANNEL_BACKUPS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelBackups().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.UnlockWalletRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.UnlockWalletRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.UnlockWalletRequest)
        lnrpc.Walletunlocker.UnlockWalletRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.UnlockWalletRequest.class, lnrpc.Walletunlocker.UnlockWalletRequest.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.UnlockWalletRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletPassword_ = com.google.protobuf.ByteString.EMPTY;

        recoveryWindow_ = 0;

        if (channelBackupsBuilder_ == null) {
          channelBackups_ = null;
        } else {
          channelBackups_ = null;
          channelBackupsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletRequest_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletRequest getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.UnlockWalletRequest.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletRequest build() {
        lnrpc.Walletunlocker.UnlockWalletRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletRequest buildPartial() {
        lnrpc.Walletunlocker.UnlockWalletRequest result = new lnrpc.Walletunlocker.UnlockWalletRequest(this);
        result.walletPassword_ = walletPassword_;
        result.recoveryWindow_ = recoveryWindow_;
        if (channelBackupsBuilder_ == null) {
          result.channelBackups_ = channelBackups_;
        } else {
          result.channelBackups_ = channelBackupsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.UnlockWalletRequest) {
          return mergeFrom((lnrpc.Walletunlocker.UnlockWalletRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.UnlockWalletRequest other) {
        if (other == lnrpc.Walletunlocker.UnlockWalletRequest.getDefaultInstance()) return this;
        if (other.getWalletPassword() != com.google.protobuf.ByteString.EMPTY) {
          setWalletPassword(other.getWalletPassword());
        }
        if (other.getRecoveryWindow() != 0) {
          setRecoveryWindow(other.getRecoveryWindow());
        }
        if (other.hasChannelBackups()) {
          mergeChannelBackups(other.getChannelBackups());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.UnlockWalletRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.UnlockWalletRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString walletPassword_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *wallet_password should be the current valid passphrase for the daemon. This
       *will be required to decrypt on-disk material that the daemon requires to
       *function properly. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @return The walletPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getWalletPassword() {
        return walletPassword_;
      }
      /**
       * <pre>
       *wallet_password should be the current valid passphrase for the daemon. This
       *will be required to decrypt on-disk material that the daemon requires to
       *function properly. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @param value The walletPassword to set.
       * @return This builder for chaining.
       */
      public Builder setWalletPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *wallet_password should be the current valid passphrase for the daemon. This
       *will be required to decrypt on-disk material that the daemon requires to
       *function properly. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes wallet_password = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearWalletPassword() {
        
        walletPassword_ = getDefaultInstance().getWalletPassword();
        onChanged();
        return this;
      }

      private int recoveryWindow_ ;
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 2;</code>
       * @return The recoveryWindow.
       */
      @java.lang.Override
      public int getRecoveryWindow() {
        return recoveryWindow_;
      }
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 2;</code>
       * @param value The recoveryWindow to set.
       * @return This builder for chaining.
       */
      public Builder setRecoveryWindow(int value) {
        
        recoveryWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *recovery_window is an optional argument specifying the address lookahead
       *when restoring a wallet seed. The recovery window applies to each
       *individual branch of the BIP44 derivation paths. Supplying a recovery
       *window of zero indicates that no addresses should be recovered, such after
       *the first initialization of the wallet.
       * </pre>
       *
       * <code>int32 recovery_window = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecoveryWindow() {
        
        recoveryWindow_ = 0;
        onChanged();
        return this;
      }

      private lnrpc.Rpc.ChanBackupSnapshot channelBackups_;
      private com.google.protobuf.SingleFieldBuilderV3<
          lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder> channelBackupsBuilder_;
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       * @return Whether the channelBackups field is set.
       */
      public boolean hasChannelBackups() {
        return channelBackupsBuilder_ != null || channelBackups_ != null;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       * @return The channelBackups.
       */
      public lnrpc.Rpc.ChanBackupSnapshot getChannelBackups() {
        if (channelBackupsBuilder_ == null) {
          return channelBackups_ == null ? lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
        } else {
          return channelBackupsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public Builder setChannelBackups(lnrpc.Rpc.ChanBackupSnapshot value) {
        if (channelBackupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channelBackups_ = value;
          onChanged();
        } else {
          channelBackupsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public Builder setChannelBackups(
          lnrpc.Rpc.ChanBackupSnapshot.Builder builderForValue) {
        if (channelBackupsBuilder_ == null) {
          channelBackups_ = builderForValue.build();
          onChanged();
        } else {
          channelBackupsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public Builder mergeChannelBackups(lnrpc.Rpc.ChanBackupSnapshot value) {
        if (channelBackupsBuilder_ == null) {
          if (channelBackups_ != null) {
            channelBackups_ =
              lnrpc.Rpc.ChanBackupSnapshot.newBuilder(channelBackups_).mergeFrom(value).buildPartial();
          } else {
            channelBackups_ = value;
          }
          onChanged();
        } else {
          channelBackupsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public Builder clearChannelBackups() {
        if (channelBackupsBuilder_ == null) {
          channelBackups_ = null;
          onChanged();
        } else {
          channelBackups_ = null;
          channelBackupsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public lnrpc.Rpc.ChanBackupSnapshot.Builder getChannelBackupsBuilder() {
        
        onChanged();
        return getChannelBackupsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      public lnrpc.Rpc.ChanBackupSnapshotOrBuilder getChannelBackupsOrBuilder() {
        if (channelBackupsBuilder_ != null) {
          return channelBackupsBuilder_.getMessageOrBuilder();
        } else {
          return channelBackups_ == null ?
              lnrpc.Rpc.ChanBackupSnapshot.getDefaultInstance() : channelBackups_;
        }
      }
      /**
       * <pre>
       *channel_backups is an optional argument that allows clients to recover the
       *settled funds within a set of channels. This should be populated if the
       *user was unable to close out all channels and sweep funds before partial or
       *total data loss occurred. If specified, then after on-chain recovery of
       *funds, lnd begin to carry out the data loss recovery protocol in order to
       *recover the funds in each channel from a remote force closed transaction.
       * </pre>
       *
       * <code>.lnrpc.ChanBackupSnapshot channel_backups = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder> 
          getChannelBackupsFieldBuilder() {
        if (channelBackupsBuilder_ == null) {
          channelBackupsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              lnrpc.Rpc.ChanBackupSnapshot, lnrpc.Rpc.ChanBackupSnapshot.Builder, lnrpc.Rpc.ChanBackupSnapshotOrBuilder>(
                  getChannelBackups(),
                  getParentForChildren(),
                  isClean());
          channelBackups_ = null;
        }
        return channelBackupsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.UnlockWalletRequest)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.UnlockWalletRequest)
    private static final lnrpc.Walletunlocker.UnlockWalletRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.UnlockWalletRequest();
    }

    public static lnrpc.Walletunlocker.UnlockWalletRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnlockWalletRequest>
        PARSER = new com.google.protobuf.AbstractParser<UnlockWalletRequest>() {
      @java.lang.Override
      public UnlockWalletRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnlockWalletRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnlockWalletRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnlockWalletRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.UnlockWalletRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnlockWalletResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.UnlockWalletResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code lnrpc.UnlockWalletResponse}
   */
  public static final class UnlockWalletResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.UnlockWalletResponse)
      UnlockWalletResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnlockWalletResponse.newBuilder() to construct.
    private UnlockWalletResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnlockWalletResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnlockWalletResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnlockWalletResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.UnlockWalletResponse.class, lnrpc.Walletunlocker.UnlockWalletResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.UnlockWalletResponse)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.UnlockWalletResponse other = (lnrpc.Walletunlocker.UnlockWalletResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.UnlockWalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.UnlockWalletResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.UnlockWalletResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.UnlockWalletResponse)
        lnrpc.Walletunlocker.UnlockWalletResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.UnlockWalletResponse.class, lnrpc.Walletunlocker.UnlockWalletResponse.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.UnlockWalletResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_UnlockWalletResponse_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletResponse getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.UnlockWalletResponse.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletResponse build() {
        lnrpc.Walletunlocker.UnlockWalletResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.UnlockWalletResponse buildPartial() {
        lnrpc.Walletunlocker.UnlockWalletResponse result = new lnrpc.Walletunlocker.UnlockWalletResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.UnlockWalletResponse) {
          return mergeFrom((lnrpc.Walletunlocker.UnlockWalletResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.UnlockWalletResponse other) {
        if (other == lnrpc.Walletunlocker.UnlockWalletResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.UnlockWalletResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.UnlockWalletResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.UnlockWalletResponse)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.UnlockWalletResponse)
    private static final lnrpc.Walletunlocker.UnlockWalletResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.UnlockWalletResponse();
    }

    public static lnrpc.Walletunlocker.UnlockWalletResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnlockWalletResponse>
        PARSER = new com.google.protobuf.AbstractParser<UnlockWalletResponse>() {
      @java.lang.Override
      public UnlockWalletResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnlockWalletResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnlockWalletResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnlockWalletResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.UnlockWalletResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChangePasswordRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.ChangePasswordRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *current_password should be the current valid passphrase used to unlock the
     *daemon. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes current_password = 1;</code>
     * @return The currentPassword.
     */
    com.google.protobuf.ByteString getCurrentPassword();

    /**
     * <pre>
     *new_password should be the new passphrase that will be needed to unlock the
     *daemon. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes new_password = 2;</code>
     * @return The newPassword.
     */
    com.google.protobuf.ByteString getNewPassword();
  }
  /**
   * Protobuf type {@code lnrpc.ChangePasswordRequest}
   */
  public static final class ChangePasswordRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.ChangePasswordRequest)
      ChangePasswordRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChangePasswordRequest.newBuilder() to construct.
    private ChangePasswordRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChangePasswordRequest() {
      currentPassword_ = com.google.protobuf.ByteString.EMPTY;
      newPassword_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChangePasswordRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChangePasswordRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              currentPassword_ = input.readBytes();
              break;
            }
            case 18: {

              newPassword_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.ChangePasswordRequest.class, lnrpc.Walletunlocker.ChangePasswordRequest.Builder.class);
    }

    public static final int CURRENT_PASSWORD_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString currentPassword_;
    /**
     * <pre>
     *current_password should be the current valid passphrase used to unlock the
     *daemon. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes current_password = 1;</code>
     * @return The currentPassword.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCurrentPassword() {
      return currentPassword_;
    }

    public static final int NEW_PASSWORD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString newPassword_;
    /**
     * <pre>
     *new_password should be the new passphrase that will be needed to unlock the
     *daemon. When using REST, this field must be encoded as base64.
     * </pre>
     *
     * <code>bytes new_password = 2;</code>
     * @return The newPassword.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNewPassword() {
      return newPassword_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!currentPassword_.isEmpty()) {
        output.writeBytes(1, currentPassword_);
      }
      if (!newPassword_.isEmpty()) {
        output.writeBytes(2, newPassword_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!currentPassword_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, currentPassword_);
      }
      if (!newPassword_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, newPassword_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.ChangePasswordRequest)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.ChangePasswordRequest other = (lnrpc.Walletunlocker.ChangePasswordRequest) obj;

      if (!getCurrentPassword()
          .equals(other.getCurrentPassword())) return false;
      if (!getNewPassword()
          .equals(other.getNewPassword())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRENT_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPassword().hashCode();
      hash = (37 * hash) + NEW_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getNewPassword().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.ChangePasswordRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.ChangePasswordRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.ChangePasswordRequest)
        lnrpc.Walletunlocker.ChangePasswordRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.ChangePasswordRequest.class, lnrpc.Walletunlocker.ChangePasswordRequest.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.ChangePasswordRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        currentPassword_ = com.google.protobuf.ByteString.EMPTY;

        newPassword_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordRequest_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordRequest getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.ChangePasswordRequest.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordRequest build() {
        lnrpc.Walletunlocker.ChangePasswordRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordRequest buildPartial() {
        lnrpc.Walletunlocker.ChangePasswordRequest result = new lnrpc.Walletunlocker.ChangePasswordRequest(this);
        result.currentPassword_ = currentPassword_;
        result.newPassword_ = newPassword_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.ChangePasswordRequest) {
          return mergeFrom((lnrpc.Walletunlocker.ChangePasswordRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.ChangePasswordRequest other) {
        if (other == lnrpc.Walletunlocker.ChangePasswordRequest.getDefaultInstance()) return this;
        if (other.getCurrentPassword() != com.google.protobuf.ByteString.EMPTY) {
          setCurrentPassword(other.getCurrentPassword());
        }
        if (other.getNewPassword() != com.google.protobuf.ByteString.EMPTY) {
          setNewPassword(other.getNewPassword());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.ChangePasswordRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.ChangePasswordRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString currentPassword_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *current_password should be the current valid passphrase used to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes current_password = 1;</code>
       * @return The currentPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCurrentPassword() {
        return currentPassword_;
      }
      /**
       * <pre>
       *current_password should be the current valid passphrase used to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes current_password = 1;</code>
       * @param value The currentPassword to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        currentPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *current_password should be the current valid passphrase used to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes current_password = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentPassword() {
        
        currentPassword_ = getDefaultInstance().getCurrentPassword();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString newPassword_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *new_password should be the new passphrase that will be needed to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes new_password = 2;</code>
       * @return The newPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNewPassword() {
        return newPassword_;
      }
      /**
       * <pre>
       *new_password should be the new passphrase that will be needed to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes new_password = 2;</code>
       * @param value The newPassword to set.
       * @return This builder for chaining.
       */
      public Builder setNewPassword(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        newPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *new_password should be the new passphrase that will be needed to unlock the
       *daemon. When using REST, this field must be encoded as base64.
       * </pre>
       *
       * <code>bytes new_password = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewPassword() {
        
        newPassword_ = getDefaultInstance().getNewPassword();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.ChangePasswordRequest)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.ChangePasswordRequest)
    private static final lnrpc.Walletunlocker.ChangePasswordRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.ChangePasswordRequest();
    }

    public static lnrpc.Walletunlocker.ChangePasswordRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChangePasswordRequest>
        PARSER = new com.google.protobuf.AbstractParser<ChangePasswordRequest>() {
      @java.lang.Override
      public ChangePasswordRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangePasswordRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChangePasswordRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChangePasswordRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.ChangePasswordRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChangePasswordResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lnrpc.ChangePasswordResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code lnrpc.ChangePasswordResponse}
   */
  public static final class ChangePasswordResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:lnrpc.ChangePasswordResponse)
      ChangePasswordResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChangePasswordResponse.newBuilder() to construct.
    private ChangePasswordResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChangePasswordResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChangePasswordResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChangePasswordResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lnrpc.Walletunlocker.ChangePasswordResponse.class, lnrpc.Walletunlocker.ChangePasswordResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lnrpc.Walletunlocker.ChangePasswordResponse)) {
        return super.equals(obj);
      }
      lnrpc.Walletunlocker.ChangePasswordResponse other = (lnrpc.Walletunlocker.ChangePasswordResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lnrpc.Walletunlocker.ChangePasswordResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lnrpc.Walletunlocker.ChangePasswordResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lnrpc.ChangePasswordResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lnrpc.ChangePasswordResponse)
        lnrpc.Walletunlocker.ChangePasswordResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lnrpc.Walletunlocker.ChangePasswordResponse.class, lnrpc.Walletunlocker.ChangePasswordResponse.Builder.class);
      }

      // Construct using lnrpc.Walletunlocker.ChangePasswordResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lnrpc.Walletunlocker.internal_static_lnrpc_ChangePasswordResponse_descriptor;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordResponse getDefaultInstanceForType() {
        return lnrpc.Walletunlocker.ChangePasswordResponse.getDefaultInstance();
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordResponse build() {
        lnrpc.Walletunlocker.ChangePasswordResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public lnrpc.Walletunlocker.ChangePasswordResponse buildPartial() {
        lnrpc.Walletunlocker.ChangePasswordResponse result = new lnrpc.Walletunlocker.ChangePasswordResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lnrpc.Walletunlocker.ChangePasswordResponse) {
          return mergeFrom((lnrpc.Walletunlocker.ChangePasswordResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lnrpc.Walletunlocker.ChangePasswordResponse other) {
        if (other == lnrpc.Walletunlocker.ChangePasswordResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lnrpc.Walletunlocker.ChangePasswordResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lnrpc.Walletunlocker.ChangePasswordResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:lnrpc.ChangePasswordResponse)
    }

    // @@protoc_insertion_point(class_scope:lnrpc.ChangePasswordResponse)
    private static final lnrpc.Walletunlocker.ChangePasswordResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lnrpc.Walletunlocker.ChangePasswordResponse();
    }

    public static lnrpc.Walletunlocker.ChangePasswordResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChangePasswordResponse>
        PARSER = new com.google.protobuf.AbstractParser<ChangePasswordResponse>() {
      @java.lang.Override
      public ChangePasswordResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangePasswordResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChangePasswordResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChangePasswordResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public lnrpc.Walletunlocker.ChangePasswordResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_GenSeedRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_GenSeedRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_GenSeedResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_GenSeedResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_InitWalletRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_InitWalletRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_InitWalletResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_InitWalletResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_UnlockWalletRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_UnlockWalletRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_UnlockWalletResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_UnlockWalletResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_ChangePasswordRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_ChangePasswordRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lnrpc_ChangePasswordResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_lnrpc_ChangePasswordResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024walletunlocker.proto\022\005lnrpc\032\trpc.proto" +
      "\"A\n\016GenSeedRequest\022\031\n\021aezeed_passphrase\030" +
      "\001 \001(\014\022\024\n\014seed_entropy\030\002 \001(\014\"H\n\017GenSeedRe" +
      "sponse\022\034\n\024cipher_seed_mnemonic\030\001 \003(\t\022\027\n\017" +
      "enciphered_seed\030\002 \001(\014\"\262\001\n\021InitWalletRequ" +
      "est\022\027\n\017wallet_password\030\001 \001(\014\022\034\n\024cipher_s" +
      "eed_mnemonic\030\002 \003(\t\022\031\n\021aezeed_passphrase\030" +
      "\003 \001(\014\022\027\n\017recovery_window\030\004 \001(\005\0222\n\017channe" +
      "l_backups\030\005 \001(\0132\031.lnrpc.ChanBackupSnapsh" +
      "ot\"\024\n\022InitWalletResponse\"{\n\023UnlockWallet" +
      "Request\022\027\n\017wallet_password\030\001 \001(\014\022\027\n\017reco" +
      "very_window\030\002 \001(\005\0222\n\017channel_backups\030\003 \001" +
      "(\0132\031.lnrpc.ChanBackupSnapshot\"\026\n\024UnlockW" +
      "alletResponse\"G\n\025ChangePasswordRequest\022\030" +
      "\n\020current_password\030\001 \001(\014\022\024\n\014new_password" +
      "\030\002 \001(\014\"\030\n\026ChangePasswordResponse2\245\002\n\016Wal" +
      "letUnlocker\0228\n\007GenSeed\022\025.lnrpc.GenSeedRe" +
      "quest\032\026.lnrpc.GenSeedResponse\022A\n\nInitWal" +
      "let\022\030.lnrpc.InitWalletRequest\032\031.lnrpc.In" +
      "itWalletResponse\022G\n\014UnlockWallet\022\032.lnrpc" +
      ".UnlockWalletRequest\032\033.lnrpc.UnlockWalle" +
      "tResponse\022M\n\016ChangePassword\022\034.lnrpc.Chan" +
      "gePasswordRequest\032\035.lnrpc.ChangePassword" +
      "ResponseB\'Z%github.com/lightningnetwork/" +
      "lnd/lnrpcb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          lnrpc.Rpc.getDescriptor(),
        });
    internal_static_lnrpc_GenSeedRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_lnrpc_GenSeedRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_GenSeedRequest_descriptor,
        new java.lang.String[] { "AezeedPassphrase", "SeedEntropy", });
    internal_static_lnrpc_GenSeedResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_lnrpc_GenSeedResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_GenSeedResponse_descriptor,
        new java.lang.String[] { "CipherSeedMnemonic", "EncipheredSeed", });
    internal_static_lnrpc_InitWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_lnrpc_InitWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_InitWalletRequest_descriptor,
        new java.lang.String[] { "WalletPassword", "CipherSeedMnemonic", "AezeedPassphrase", "RecoveryWindow", "ChannelBackups", });
    internal_static_lnrpc_InitWalletResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_lnrpc_InitWalletResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_InitWalletResponse_descriptor,
        new java.lang.String[] { });
    internal_static_lnrpc_UnlockWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_lnrpc_UnlockWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_UnlockWalletRequest_descriptor,
        new java.lang.String[] { "WalletPassword", "RecoveryWindow", "ChannelBackups", });
    internal_static_lnrpc_UnlockWalletResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_lnrpc_UnlockWalletResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_UnlockWalletResponse_descriptor,
        new java.lang.String[] { });
    internal_static_lnrpc_ChangePasswordRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_lnrpc_ChangePasswordRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_ChangePasswordRequest_descriptor,
        new java.lang.String[] { "CurrentPassword", "NewPassword", });
    internal_static_lnrpc_ChangePasswordResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_lnrpc_ChangePasswordResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_lnrpc_ChangePasswordResponse_descriptor,
        new java.lang.String[] { });
    lnrpc.Rpc.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
